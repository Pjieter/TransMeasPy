# see documentation, e.g.
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://www.python.org/dev/peps/pep-0621/

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

keywords = ["measurement","transport"]
license = {file = "LICENSE"}
name = "TransMeasPy"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.11"
version = "0.1.0"

[tool.poetry]
name = "transmeaspy"
version = "0.1.0"
description = "Instrument-agnostic electronic transport measurement framework built on top of qcodes. TransMeasPy structures experiments around independent (set) and dependent (measured) variables, captures comprehensive instrument and sample metadata for reproducibility, enforces safety limits, and supports adaptable, stoppable measurements."
authors = ["Michiel Dubbelman <m.p.dubbelman@tudelft.nl>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
qcodes = "^0.53.0"
zhinst-qcodes = "^0.7.0"
qcodes-contrib-drivers = "^0.23.0"
pyqt5-qt5 = "5.15.2"
quantify = "^0.0.5"

[tool.poetry.group.dev.dependencies]
build = "^1.3.0"
bump-my-version = "^1.2.2"
coverage = {extras = ["toml"], version = "^7.10.6"}
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
ruff = "^0.13.0"
sphinx = "^8.2.3"
sphinx-rtd-theme = "^3.0.2"
sphinx-autoapi = "^3.6.0"
tox = "^4.30.2"
myst-parser = "^4.0.1"


[tool.poetry.group.docs.dependencies]
sphinx = "^8.2.3"
sphinx-rtd-theme = "^3.0.2"
sphinx-autoapi = "^3.6.0"
myst-parser = "^4.0.1"


[tool.poetry.group.publishing.dependencies]
build = "^1.3.0"
twine = "^6.2.0"
wheel = "^0.45.1"

[project.urls]
Repository = "https://github.com/Pjieter/TransMeasPy"
Issues = "https://github.com/Pjieter/TransMeasPy/issues"
Changelog = "https://github.com/Pjieter/TransMeasPy/CHANGELOG.md"
ReadTheDocs = "https://TransMeasPy.readthedocs.io"

[tool.pytest.ini_options]
testpaths = ["tests"]


[tool.coverage.run]
branch = true
source = ["src/transmeaspy"]
command_line = "-m pytest"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,py312
skip_missing_interpreters = true
[testenv]
commands = pytest
extras = dev
"""

[tool.ruff]
line-length = 120
output-format = "concise"
extend-exclude = ["docs"]

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Enable Pyflakes `E` and `F` codes by default.
select = ["ALL"]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ANN204", # Missing return type annotation for special (dunder) method
    "FBT",    # Using boolean function arguments
    "TD",     # TODOs
    "FIX001", # Resolve FIXMEs
    "FIX002", # Resolve TODOs
    "B028",   # No explicit `stacklevel` keyword argument found in warning
    # No docstrings required in the following cases
    "D100", # Missing module docstring
    "D104", # Missing public package docstring
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
]
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
# Tests can ignore a few extra rules
"tests/**.py" = [
    "ANN201", # Missing return type annotation for public function
    "PT011",  # Missing `match` parameter in `pytest.raises()`
    "S101",   # Use of assert is detected
]

[tool.ruff.lint.isort]
known-first-party = ["TransMeasPy"]
force-single-line = true
no-lines-before = ["future","standard-library","third-party","first-party","local-folder"]

[tool.bumpversion]
current_version = "0.1.0"

[[tool.bumpversion.files]]
filename = "src/transmeaspy/__init__.py"

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[[tool.bumpversion.files]]
filename = "CITATION.cff"

[[tool.bumpversion.files]]
filename = "docs/conf.py"
